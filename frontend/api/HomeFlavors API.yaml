openapi: 3.0.3
info:
  title: HomeFlavors API
  version: 1.0.0
paths:
  /api/docs/schema/:
    get:
      operationId: api_docs_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - json
              - yaml
        - in: query
          name: lang
          schema:
            type: string
            enum:
              - af
              - ar
              - ar-dz
              - ast
              - az
              - be
              - bg
              - bn
              - br
              - bs
              - ca
              - ckb
              - cs
              - cy
              - da
              - de
              - dsb
              - el
              - en
              - en-au
              - en-gb
              - eo
              - es
              - es-ar
              - es-co
              - es-mx
              - es-ni
              - es-ve
              - et
              - eu
              - fa
              - fi
              - fr
              - fy
              - ga
              - gd
              - gl
              - he
              - hi
              - hr
              - hsb
              - hu
              - hy
              - ia
              - id
              - ig
              - io
              - is
              - it
              - ja
              - ka
              - kab
              - kk
              - km
              - kn
              - ko
              - ky
              - lb
              - lt
              - lv
              - mk
              - ml
              - mn
              - mr
              - ms
              - my
              - nb
              - ne
              - nl
              - nn
              - os
              - pa
              - pl
              - pt
              - pt-br
              - ro
              - ru
              - sk
              - sl
              - sq
              - sr
              - sr-latn
              - sv
              - sw
              - ta
              - te
              - tg
              - th
              - tk
              - tr
              - tt
              - udm
              - ug
              - uk
              - ur
              - uz
              - vi
              - zh-hans
              - zh-hant
      tags:
        - api
      security:
        - {}
      responses:
        "200":
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ""
  /api/logout/:
    post:
      operationId: api_logout_create
      tags:
        - api
      security:
        - {}
      responses:
        "200":
          description: No response body
  /api/register/:
    post:
      operationId: api_register_create
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Register"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Register"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Register"
        required: true
      security:
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Register"
          description: ""
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomTokenObtainPair"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CustomTokenObtainPair"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CustomTokenObtainPair"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomTokenObtainPair"
          description: ""
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JWTCookieTokenRefresh"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/JWTCookieTokenRefresh"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/JWTCookieTokenRefresh"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JWTCookieTokenRefresh"
          description: ""
  /kitchens/:
    get:
      operationId: kitchens_list
      tags:
        - kitchens
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Kitchen"
          description: ""
    post:
      operationId: kitchens_create
      tags:
        - kitchens
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Kitchen"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Kitchen"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Kitchen"
        required: true
      security:
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Kitchen"
          description: ""
  /kitchens/{id}/:
    get:
      operationId: kitchens_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this kitchen.
          required: true
      tags:
        - kitchens
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Kitchen"
          description: ""
    put:
      operationId: kitchens_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this kitchen.
          required: true
      tags:
        - kitchens
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Kitchen"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Kitchen"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Kitchen"
        required: true
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Kitchen"
          description: ""
    patch:
      operationId: kitchens_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this kitchen.
          required: true
      tags:
        - kitchens
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedKitchen"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedKitchen"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedKitchen"
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Kitchen"
          description: ""
    delete:
      operationId: kitchens_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this kitchen.
          required: true
      tags:
        - kitchens
      security:
        - {}
      responses:
        "204":
          description: No response body
  /menuItems/:
    get:
      operationId: menuItems_list
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Category of the menu items to be retrieved
        - in: query
          name: kitchen
          schema:
            type: integer
          description: ID of the kitchen whose menu items are to be retrieved
      tags:
        - menuItems
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MenuItem"
          description: ""
    post:
      operationId: menuItems_create
      tags:
        - menuItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuItem"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/MenuItem"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MenuItem"
        required: true
      security:
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuItem"
          description: ""
  /menuItems/{id}/:
    get:
      operationId: menuItems_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this menu item.
          required: true
      tags:
        - menuItems
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuItem"
          description: ""
    put:
      operationId: menuItems_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this menu item.
          required: true
      tags:
        - menuItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuItem"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/MenuItem"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MenuItem"
        required: true
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuItem"
          description: ""
    patch:
      operationId: menuItems_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this menu item.
          required: true
      tags:
        - menuItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedMenuItem"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedMenuItem"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedMenuItem"
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuItem"
          description: ""
    delete:
      operationId: menuItems_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this menu item.
          required: true
      tags:
        - menuItems
      security:
        - {}
      responses:
        "204":
          description: No response body
  /orderItems/:
    get:
      operationId: orderItems_list
      tags:
        - orderItems
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderItem"
          description: ""
    post:
      operationId: orderItems_create
      tags:
        - orderItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderItem"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/OrderItem"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/OrderItem"
        required: true
      security:
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderItem"
          description: ""
  /orderItems/{id}/:
    get:
      operationId: orderItems_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this order item.
          required: true
      tags:
        - orderItems
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderItem"
          description: ""
    put:
      operationId: orderItems_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this order item.
          required: true
      tags:
        - orderItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderItem"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/OrderItem"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/OrderItem"
        required: true
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderItem"
          description: ""
    patch:
      operationId: orderItems_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this order item.
          required: true
      tags:
        - orderItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedOrderItem"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedOrderItem"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedOrderItem"
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderItem"
          description: ""
    delete:
      operationId: orderItems_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this order item.
          required: true
      tags:
        - orderItems
      security:
        - {}
      responses:
        "204":
          description: No response body
  /orders/:
    get:
      operationId: orders_list
      parameters:
        - in: query
          name: kitchen_cancel_orders
          schema:
            type: boolean
          description: Get all cancel orders from the kitchen
        - in: query
          name: kitchen_pending_orders
          schema:
            type: boolean
          description: Get all pending orders from the kitchen
        - in: query
          name: user_cancel_orders
          schema:
            type: boolean
          description: Get all cancel orders from the user
        - in: query
          name: user_pending_orders
          schema:
            type: boolean
          description: Get all pending orders from the user
      tags:
        - orders
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
          description: ""
    post:
      operationId: orders_create
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Order"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Order"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
          description: ""
  /orders/{id}/:
    get:
      operationId: orders_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this order.
          required: true
      tags:
        - orders
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
          description: ""
    put:
      operationId: orders_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this order.
          required: true
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Order"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Order"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
          description: ""
    patch:
      operationId: orders_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this order.
          required: true
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedOrder"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedOrder"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedOrder"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
          description: ""
    delete:
      operationId: orders_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this order.
          required: true
      tags:
        - orders
      responses:
        "204":
          description: No response body
  /sales-data/:
    get:
      operationId: sales_data_list
      parameters:
        - in: query
          name: end_date
          schema:
            type: string
          description: Get total revenue from the kitchen
        - in: query
          name: start_date
          schema:
            type: string
          description: Get total revenue from the kitchen
      tags:
        - sales-data
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SalesData"
          description: ""
  /users/:
    get:
      operationId: users_list
      tags:
        - users
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
          description: ""
    post:
      operationId: users_create
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/User"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      security:
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: ""
  /users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this user.
          required: true
      tags:
        - users
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: ""
    put:
      operationId: users_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this user.
          required: true
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/User"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: ""
    patch:
      operationId: users_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this user.
          required: true
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedUser"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedUser"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedUser"
      security:
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: ""
    delete:
      operationId: users_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this user.
          required: true
      tags:
        - users
      security:
        - {}
      responses:
        "204":
          description: No response body
components:
  schemas:
    CategoryEnum:
      enum:
        - soup
        - meat
        - seafood
        - vegetables
        - pasta
      type: string
      description: |-
        * `soup` - Soup
        * `meat` - Meat
        * `seafood` - Seafood
        * `vegetables` - Vegetables
        * `pasta` - Pasta
    CustomTokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
        - password
        - username
    JWTCookieTokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
        - access
    Kitchen:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        address:
          type: string
          maxLength: 100
        contactNumber:
          type: string
        cuisine:
          type: string
          maxLength: 50
        description:
          type: string
          maxLength: 1000
        logo:
          type: string
          format: uri
        banner:
          type: string
          format: uri
        openingHours:
          type: string
        orderAcceptTime:
          type: string
        owner:
          type: integer
      required:
        - address
        - contactNumber
        - cuisine
        - description
        - id
        - name
        - openingHours
        - orderAcceptTime
        - owner
    MenuItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
          maxLength: 1000
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        image:
          type: string
          format: uri
        category:
          $ref: "#/components/schemas/CategoryEnum"
        isAvailable:
          type: boolean
        isVeg:
          type: boolean
        isSpicy:
          type: boolean
        kitchen:
          type: integer
      required:
        - category
        - description
        - id
        - isAvailable
        - isSpicy
        - isVeg
        - kitchen
        - name
        - price
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        kitchen:
          type: integer
        orderItems:
          type: array
          items:
            $ref: "#/components/schemas/OrderItem"
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        contactNumber:
          type: string
        totalPrice:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        totalQuantity:
          type: integer
        pickUpDate:
          type: string
          format: date
        pickUpTime:
          type: string
          format: time
        remark:
          type: string
          nullable: true
          maxLength: 1000
        isAccepted:
          type: boolean
        isCancelled:
          type: boolean
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
        - contactNumber
        - createdAt
        - id
        - kitchen
        - orderItems
        - pickUpDate
        - pickUpTime
        - totalPrice
        - updatedAt
        - user
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        menu_item:
          type: integer
          writeOnly: true
        menuItem:
          allOf:
            - $ref: "#/components/schemas/MenuItem"
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        order:
          type: integer
          nullable: true
      required:
        - id
        - menuItem
        - menu_item
    PatchedKitchen:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        address:
          type: string
          maxLength: 100
        contactNumber:
          type: string
        cuisine:
          type: string
          maxLength: 50
        description:
          type: string
          maxLength: 1000
        logo:
          type: string
          format: uri
        banner:
          type: string
          format: uri
        openingHours:
          type: string
        orderAcceptTime:
          type: string
        owner:
          type: integer
    PatchedMenuItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
          maxLength: 1000
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        image:
          type: string
          format: uri
        category:
          $ref: "#/components/schemas/CategoryEnum"
        isAvailable:
          type: boolean
        isVeg:
          type: boolean
        isSpicy:
          type: boolean
        kitchen:
          type: integer
    PatchedOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        kitchen:
          type: integer
        orderItems:
          type: array
          items:
            $ref: "#/components/schemas/OrderItem"
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        contactNumber:
          type: string
        totalPrice:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        totalQuantity:
          type: integer
        pickUpDate:
          type: string
          format: date
        pickUpTime:
          type: string
          format: time
        remark:
          type: string
          nullable: true
          maxLength: 1000
        isAccepted:
          type: boolean
        isCancelled:
          type: boolean
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    PatchedOrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        menu_item:
          type: integer
          writeOnly: true
        menuItem:
          allOf:
            - $ref: "#/components/schemas/MenuItem"
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        order:
          type: integer
          nullable: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        firstName:
          type: string
        lastName:
          type: string
        role:
          $ref: "#/components/schemas/RoleEnum"
        phoneNumber:
          type: string
    Register:
      type: object
      properties:
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          maxLength: 128
        email:
          type: string
          format: email
          maxLength: 254
        firstName:
          type: string
        lastName:
          type: string
        role:
          $ref: "#/components/schemas/RoleEnum"
        phoneNumber:
          type: string
      required:
        - email
        - firstName
        - lastName
        - password
        - phoneNumber
        - username
    RoleEnum:
      enum:
        - owner
        - user
      type: string
      description: |-
        * `owner` - Owner
        * `user` - User
    SalesByHour:
      type: object
      properties:
        time:
          type: string
        revenue:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
        ordersCount:
          type: integer
      required:
        - ordersCount
        - quantity
        - revenue
        - time
    SalesByPeriod:
      type: object
      properties:
        revenue:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
        orders:
          type: integer
      required:
        - orders
        - quantity
        - revenue
    SalesData:
      type: object
      properties:
        salesByPeriod:
          $ref: "#/components/schemas/SalesByPeriod"
        itemsSalesSummary:
          type: array
          items:
            type: object
            additionalProperties: {}
        salesByHour:
          type: array
          items:
            $ref: "#/components/schemas/SalesByHour"
      required:
        - salesByHour
        - salesByPeriod
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        firstName:
          type: string
        lastName:
          type: string
        role:
          $ref: "#/components/schemas/RoleEnum"
        phoneNumber:
          type: string
      required:
        - email
        - firstName
        - id
        - lastName
        - phoneNumber
        - username
